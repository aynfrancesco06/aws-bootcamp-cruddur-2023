AWSTemplateFormatVersion: 2010-09-09

Parameters:
  Az1:
    Type: AWS::EC2::AvailabilityZone::Name
    Default: us-east-1a
  Az2:
    Type: AWS::EC2::AvailabilityZone::Name
    Default: us-east-1b
  Az3:
    Type: AWS::EC2::AvailabilityZone::Name
    Default: us-east-1c
  VPCCidrBlock:
    Type: String
    Default: 10.0.0.0/16
  SubnetCidrBlocks:
    Description: "Comma-delimited list for private and public subnets"
    Type: CommaDelimitedList
    Default: >
      10.0.0.0/24, 
      10.0.4.0/24, 
      10.0.8.0/24, 
      10.0.12.0/24, 
      10.0.16.0/24, 
      10.0.20.0/24
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 
        Ref: VPCCidrBlock
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}VPC"
  IGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}IGW"
  AttachIGW:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: 
        Ref: VPC
      InternetGatewayId: 
        Ref: IGW
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: 
        Ref: VPC
      Tags: 
        - Key: Name
          Value: !Sub "${AWS::StackName}RT"
  RouteToIGW:
    Type: AWS::EC2::Route
    DependsOn: AttachIGW
    Properties:
      RouteTableId: 
        Ref: RouteTable
      GatewayId:
        Ref: IGW
      DestinationCidrBlock: 0.0.0.0/0
  SubnetPub1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Ref: Az1
      CidrBlock: 
        Select: [0, Ref: SubnetCidrBlocks]
      EnableDns64: false 
      MapPublicIpOnLaunch: true # public subnet
      VpcId:
        Ref: VPC
      Tags:
       - Key: Name
         Value: CruddurSubnetPub1
  SubnetPub2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Ref: Az2
      CidrBlock:
       Select: [1, Ref: SubnetCidrBlocks]
      EnableDns64: false 
      MapPublicIpOnLaunch: true # public subnet
      VpcId:
        Ref: VPC
      Tags:
       - Key: Name
         Value: CruddurSubnetPub2
  SubnetPub3:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Ref: Az3   
      CidrBlock:
        Select: [2, Ref: SubnetCidrBlocks]
      EnableDns64: false 
      MapPublicIpOnLaunch: true # public subnet
      VpcId:
        Ref: VPC
      Tags:
       - Key: Name
         Value: CruddurSubnetPub3
  SubnetPriv1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: 
        Ref: Az1
      CidrBlock:
        Select: [3, Ref: SubnetCidrBlocks]
      EnableDns64: false 
      MapPublicIpOnLaunch: true # private subnet
      VpcId:
        Ref: VPC
      Tags:
       - Key: Name
         Value: CruddurSubnetPriv1
  SubnetPriv2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Ref: Az2
      CidrBlock:
        Select: [4, Ref: SubnetCidrBlocks]
      EnableDns64: false 
      MapPublicIpOnLaunch: true # private subnet
      VpcId:
        Ref: VPC
      Tags:
       - Key: Name
         Value: CruddurSubnetPriv2
  SubnetPriv3:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Ref: Az3
      CidrBlock:
        Select: [5, Ref: SubnetCidrBlocks]
      EnableDns64: false 
      MapPublicIpOnLaunch: true # private subnet
      VpcId:
        Ref: VPC
      Tags:
       - Key: Name
         Value: CruddurSubnetPriv3
  SubnetPub1RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: SubnetPub1
      RouteTableId:
        Ref: RouteTable
  SubnetPub2RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: SubnetPub2
      RouteTableId:
        Ref: RouteTable
  SubnetPub3RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: SubnetPub3
      RouteTableId:
        Ref: RouteTable
  SubnetPriv1RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: SubnetPriv1
      RouteTableId:
        Ref: RouteTable
  SubnetPriv2RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: SubnetPriv2
      RouteTableId:
        Ref: RouteTable
  SubnetPriv3RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: SubnetPriv3
      RouteTableId:
        Ref: RouteTable
  
  # RouteToLocal:
  #   Type: AWS::EC2::Route
  #   Properties:
  #     RouteTableId: 
  #       Ref: RouteTable
  #     GatewayId:
  #       Ref: "local"
  #     DestinationCidrBlock: 10.0.0.0/16  

# IGW
# Route Tables
# Subnets